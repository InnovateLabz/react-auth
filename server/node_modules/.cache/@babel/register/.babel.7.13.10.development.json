{"{\"assumptions\":{},\"sourceRoot\":\"/Users/niyambhat/Desktop/Apps/react-auth/server/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/niyambhat/Desktop/Apps/react-auth/server\",\"filename\":\"/Users/niyambhat/Desktop/Apps/react-auth/server/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/niyambhat/Desktop/Apps/react-auth/server\",\"plugins\":[],\"presets\":[]}:7.13.10:development":{"value":{"code":"import express from 'express';\nimport { routes } from './routes';\nimport { initializeDbConnection } from './db';\nconst PORT = process.env.PORT || 8080;\nconst app = express();\n\n// This allows us to access the body of POST/PUT\n// requests in our route handlers (as req.body)\napp.use(express.json());\n\n// Add all the routes to our Express server\n// exported from routes/index.js\nroutes.forEach(route => {\n  app[route.method](route.path, route.handler);\n});\n\n// Connect to the database, then start the server.\n// This prevents us from having to create a new DB\n// connection for every request.\ninitializeDbConnection().then(() => {\n  app.listen(PORT, () => {\n    console.log(`Server is listening on port ${PORT}`);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicm91dGVzIiwiaW5pdGlhbGl6ZURiQ29ubmVjdGlvbiIsIlBPUlQiLCJwcm9jZXNzIiwiZW52IiwiYXBwIiwidXNlIiwianNvbiIsImZvckVhY2giLCJyb3V0ZSIsIm1ldGhvZCIsInBhdGgiLCJoYW5kbGVyIiwidGhlbiIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9uaXlhbWJoYXQvRGVza3RvcC9BcHBzL3JlYWN0LWF1dGgvc2VydmVyL3NyYy8iLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IHJvdXRlcyB9IGZyb20gJy4vcm91dGVzJztcbmltcG9ydCB7IGluaXRpYWxpemVEYkNvbm5lY3Rpb24gfSBmcm9tICcuL2RiJztcblxuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgODA4MDtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4vLyBUaGlzIGFsbG93cyB1cyB0byBhY2Nlc3MgdGhlIGJvZHkgb2YgUE9TVC9QVVRcbi8vIHJlcXVlc3RzIGluIG91ciByb3V0ZSBoYW5kbGVycyAoYXMgcmVxLmJvZHkpXG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcblxuLy8gQWRkIGFsbCB0aGUgcm91dGVzIHRvIG91ciBFeHByZXNzIHNlcnZlclxuLy8gZXhwb3J0ZWQgZnJvbSByb3V0ZXMvaW5kZXguanNcbnJvdXRlcy5mb3JFYWNoKHJvdXRlID0+IHtcbiAgICBhcHBbcm91dGUubWV0aG9kXShyb3V0ZS5wYXRoLCByb3V0ZS5oYW5kbGVyKTtcbn0pO1xuXG4vLyBDb25uZWN0IHRvIHRoZSBkYXRhYmFzZSwgdGhlbiBzdGFydCB0aGUgc2VydmVyLlxuLy8gVGhpcyBwcmV2ZW50cyB1cyBmcm9tIGhhdmluZyB0byBjcmVhdGUgYSBuZXcgREJcbi8vIGNvbm5lY3Rpb24gZm9yIGV2ZXJ5IHJlcXVlc3QuXG5pbml0aWFsaXplRGJDb25uZWN0aW9uKClcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIGFwcC5saXN0ZW4oUE9SVCwgKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFNlcnZlciBpcyBsaXN0ZW5pbmcgb24gcG9ydCAke1BPUlR9YCk7XG4gICAgICAgIH0pO1xuICAgIH0pOyJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsT0FBTyxNQUFNLFNBQVM7QUFDN0IsU0FBU0MsTUFBTSxRQUFRLFVBQVU7QUFDakMsU0FBU0Msc0JBQXNCLFFBQVEsTUFBTTtBQUU3QyxNQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixJQUFJLElBQUksSUFBSTtBQUVyQyxNQUFNRyxHQUFHLEdBQUdOLE9BQU8sQ0FBQyxDQUFDOztBQUVyQjtBQUNBO0FBQ0FNLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDUCxPQUFPLENBQUNRLElBQUksQ0FBQyxDQUFDLENBQUM7O0FBRXZCO0FBQ0E7QUFDQVAsTUFBTSxDQUFDUSxPQUFPLENBQUNDLEtBQUssSUFBSTtFQUNwQkosR0FBRyxDQUFDSSxLQUFLLENBQUNDLE1BQU0sQ0FBQyxDQUFDRCxLQUFLLENBQUNFLElBQUksRUFBRUYsS0FBSyxDQUFDRyxPQUFPLENBQUM7QUFDaEQsQ0FBQyxDQUFDOztBQUVGO0FBQ0E7QUFDQTtBQUNBWCxzQkFBc0IsQ0FBQyxDQUFDLENBQ25CWSxJQUFJLENBQUMsTUFBTTtFQUNSUixHQUFHLENBQUNTLE1BQU0sQ0FBQ1osSUFBSSxFQUFFLE1BQU07SUFDbkJhLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFLCtCQUE4QmQsSUFBSyxFQUFDLENBQUM7RUFDdEQsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["express","routes","initializeDbConnection","PORT","process","env","app","use","json","forEach","route","method","path","handler","then","listen","console","log"],"sourceRoot":"/Users/niyambhat/Desktop/Apps/react-auth/server/src/","sources":["server.js"],"sourcesContent":["import express from 'express';\nimport { routes } from './routes';\nimport { initializeDbConnection } from './db';\n\nconst PORT = process.env.PORT || 8080;\n\nconst app = express();\n\n// This allows us to access the body of POST/PUT\n// requests in our route handlers (as req.body)\napp.use(express.json());\n\n// Add all the routes to our Express server\n// exported from routes/index.js\nroutes.forEach(route => {\n    app[route.method](route.path, route.handler);\n});\n\n// Connect to the database, then start the server.\n// This prevents us from having to create a new DB\n// connection for every request.\ninitializeDbConnection()\n    .then(() => {\n        app.listen(PORT, () => {\n            console.log(`Server is listening on port ${PORT}`);\n        });\n    });"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,sBAAsB,QAAQ,MAAM;AAE7C,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AAErC,MAAMG,GAAG,GAAGN,OAAO,CAAC,CAAC;;AAErB;AACA;AACAM,GAAG,CAACC,GAAG,CAACP,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACA;AACAP,MAAM,CAACQ,OAAO,CAACC,KAAK,IAAI;EACpBJ,GAAG,CAACI,KAAK,CAACC,MAAM,CAAC,CAACD,KAAK,CAACE,IAAI,EAAEF,KAAK,CAACG,OAAO,CAAC;AAChD,CAAC,CAAC;;AAEF;AACA;AACA;AACAX,sBAAsB,CAAC,CAAC,CACnBY,IAAI,CAAC,MAAM;EACRR,GAAG,CAACS,MAAM,CAACZ,IAAI,EAAE,MAAM;IACnBa,OAAO,CAACC,GAAG,CAAE,+BAA8Bd,IAAK,EAAC,CAAC;EACtD,CAAC,CAAC;AACN,CAAC,CAAC","ignoreList":[]}},"mtime":1715480022136}}